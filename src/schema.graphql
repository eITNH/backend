### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


input AddFavoriteInput {
  courseId: Int!
}

type Auth {
  activated: Boolean!
  email: String!
  id: Int!
  token: String
  user: User
  username: String!
}

type Category {
  color: String!
  courses(after: CourseWhereUniqueInput, before: CourseWhereUniqueInput, first: Int, last: Int, skip: Int): [Course!]!
  createdAt: DateTime!
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, skip: Int): [File!]!
  id: Int!
  title: String!
  updatedAt: DateTime!
}

input CategoryWhereUniqueInput {
  id: Int
}

type Course {
  acceptedMembers(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int, skip: Int): [Category!]!
  createdAt: DateTime!
  description: String
  end: DateTime!
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, skip: Int): [File!]!
  id: Int!
  isFavorite: Boolean!
  pendingMembers(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
  professors(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
  public: Boolean!
  start: DateTime!
  teaser: String
  title: String!
  updatedAt: DateTime!
}

input CourseWhereUniqueInput {
  id: Int
}

input CreateCourseInput {
  description: String
  end: DateTime
  members: [Int!]
  public: Boolean = false
  start: DateTime
  teaser: String
  title: String!
}

"""Date in format: yyyy-MM-dd HH:mm:ss"""
scalar DateTime

type File {
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int, skip: Int): [Category!]!
  createdAt: DateTime!
  creator: User!
  downloadUrl: String!
  id: Int!
  path: String!
  size: Int!
  title: String!
  type: String!
  updatedAt: DateTime!
}

input FileWhereUniqueInput {
  id: Int
}

type Mutation {
  addFavorite(data: AddFavoriteInput): Course!
  createCourse(data: CreateCourseInput): Course!
  login(login: String!, password: String!): Auth
  removeFavorite(data: RemoveFavoriteInput): Course!
  restartVerificationProcess(email: String!): Auth!
  signUp(email: String!, firstname: String!, lastname: String!, password: String!, username: String!): Auth!
  upload(file: Upload!): String
  verifyAccount(token: String!): Boolean!
}

type Query {
  courseById(id: Int!): Course
  courses: [Course!]!
  fileById(id: Int!): File
  filesByType(type: String!): [File!]!
  isLoggedIn: Boolean!
  me: User
  userById(id: Int!): User
  users: [User!]!
}

input RemoveFavoriteInput {
  courseId: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  courses(after: CourseWhereUniqueInput, before: CourseWhereUniqueInput, first: Int, last: Int, skip: Int): [Course!]!
  createdAt: DateTime!
  email: String!
  favoriteCourses(after: CourseWhereUniqueInput, before: CourseWhereUniqueInput, first: Int, last: Int, skip: Int): [Course!]!
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, skip: Int): [File!]!
  firstname: String!
  id: Int!
  image: String
  lastname: String!
  studentId: String
  type: UserType!
  updatedAt: DateTime!
  username: String!
}

enum UserType {
  PROFESSOR
  STUDENT
}

input UserWhereUniqueInput {
  id: Int
}
